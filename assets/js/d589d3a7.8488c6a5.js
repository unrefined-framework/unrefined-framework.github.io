"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[924],{8578:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=t(4848),r=t(8453);const a={sidebar_position:2},o="Getting Started",s={id:"getting-started",title:"Getting Started",description:"- JDK 1.8 or later is required to be installed in your system. You could get it here.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Tutorial",permalink:"/docs/"}},l={},d=[{value:"Project setup",id:"project-setup",level:2},{value:"Setup an empty gradle project",id:"setup-an-empty-gradle-project",level:3},{value:"Add the Maven Central repository",id:"add-the-maven-central-repository",level:3},{value:"Add the dependencies",id:"add-the-dependencies",level:3},{value:"Hello world",id:"hello-world",level:2},{value:"Draw the content",id:"draw-the-content",level:3},{value:"Display the canvas",id:"display-the-canvas",level:3},{value:"Launch the application",id:"launch-the-application",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["JDK 1.8 or later is required to be installed in your system. You could get it ",(0,i.jsx)(n.a,{href:"https://adoptium.net/zh-CN/temurin/releases/?version=8&package=jdk",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["It's recommended to use a build tool like ",(0,i.jsx)(n.a,{href:"https://gradle.org/",children:"Gradle"})," or ",(0,i.jsx)(n.a,{href:"https://maven.apache.org/",children:"Maven"})," to setup the project."]}),"\n",(0,i.jsxs)(n.li,{children:["It's also recommended to use an IDE like ",(0,i.jsx)(n.a,{href:"https://www.eclipse.org/downloads/",children:"Eclipse"})," or ",(0,i.jsx)(n.a,{href:"https://www.jetbrains.com/idea/",children:"IntelliJ IDEA"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"The following example uses IntelliJ IDEA and Gradle."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"project-setup",children:"Project setup"}),"\n",(0,i.jsx)(n.h3,{id:"setup-an-empty-gradle-project",children:"Setup an empty gradle project"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.jetbrains.com/help/idea/getting-started-with-gradle.html",children:"https://www.jetbrains.com/help/idea/getting-started-with-gradle.html"})}),"\n",(0,i.jsx)(n.h3,{id:"add-the-maven-central-repository",children:"Add the Maven Central repository"}),"\n",(0,i.jsx)(n.p,{children:"If not exist in your build file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:"repositories {\n    ...\n    mavenCentral()\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"add-the-dependencies",children:"Add the dependencies"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:"dependencies {\n    ...\n    implementation 'io.github.unrefined-framework:unrefined-core:0.7.0-SNAPSHOT'\n    implementation 'io.github.unrefined-framework:unrefined-desktop:0.7.0-SNAPSHOT'\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"hello-world",children:"Hello world"}),"\n",(0,i.jsx)(n.h3,{id:"draw-the-content",children:"Draw the content"}),"\n",(0,i.jsxs)(n.p,{children:["Create a new file ",(0,i.jsx)(n.code,{children:"HelloWorldContext.java"})," in ",(0,i.jsx)(n.code,{children:"src/main/java/org/example/helloworld"})," under your project root directory, with the following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.example.helloworld;\n\nimport unrefined.context.Context;\nimport unrefined.context.ContextAdapter;\nimport unrefined.media.graphics.Brush;\nimport unrefined.media.graphics.Color;\nimport unrefined.media.graphics.Graphics;\nimport unrefined.media.graphics.RectangleF;\nimport unrefined.media.graphics.Text;\n\n/**\n * This is the 'canvas', all drawing logic are here.\n */\npublic class HelloWorldContext extends ContextAdapter {\n\n    private static final String TXT_HELLO_WORLD = \"Hello, World!\";\n\n    private Text.Metrics metrics;\n    private RectangleF bounds;\n    private Brush brush;\n\n    @Override\n    public void onCreate(Context context) {\n        metrics = new Text.Metrics();\n        bounds = new RectangleF();\n        brush = Brush.ofColor(Color.BLACK);\n    }\n\n    @Override\n    public void onDispose(Context context) {\n        metrics = null;\n        bounds = null;\n        brush = null;\n    }\n\n    @Override\n    public void onPaint(Context context, Graphics graphics, boolean snapshot) {\n        graphics.save();\n        try {\n            graphics.setStyle(Graphics.Style.FILL);\n            graphics.setBrush(brush);\n            graphics.setTextSize(context.getContainer().SP_PT(12));\n            graphics.measureText(TXT_HELLO_WORLD, metrics, bounds);\n            graphics.drawText(TXT_HELLO_WORLD,\n                    (graphics.getWidth() - bounds.getWidth()) / 2,\n                    (graphics.getHeight() - bounds.getHeight()) / 2 + metrics.getAscent());\n        }\n        finally {\n            graphics.restore();\n        }\n    }\n\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"display-the-canvas",children:"Display the canvas"}),"\n",(0,i.jsxs)(n.p,{children:["Create a new file ",(0,i.jsx)(n.code,{children:"HelloWorldContainer.java"})," in ",(0,i.jsx)(n.code,{children:"src/main/java/org/example/helloworld"})," under your project root directory, with the following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.example.helloworld;\n\nimport unrefined.app.Runtime;\nimport unrefined.context.Container;\nimport unrefined.context.ContainerAdapter;\nimport unrefined.context.Context;\nimport unrefined.media.graphics.Color;\nimport unrefined.media.graphics.Insets;\nimport unrefined.util.SharedTimer;\n\nimport java.util.concurrent.TimeUnit;\n\n/**\n * This is the 'container' of canvas, on desktop is the application's root window.\n */\npublic class HelloWorldContainer extends ContainerAdapter {\n\n    private static final int MINIMUM_WIDTH = 64;\n    private static final int MINIMUM_HEIGHT = 48;\n    private static final int WIDTH = 640;\n    private static final int HEIGHT = 480;\n\n    private Insets insets;\n    private Context context;\n    private SharedTimer timer;\n\n    @Override\n    public void onCreate(Container container) {\n        insets = new Insets();\n\n        context = Context.of(container, new HelloWorldContext());\n        context.setBackgroundColor(Color.WHITE);\n        context.setSize(WIDTH, HEIGHT);\n        container.addContext(context);\n\n        timer = SharedTimer.build()\n                .repeat(true)\n                .period(1000_000_000 / 60L)\n                .timeUnit(TimeUnit.NANOSECONDS)\n                .delay(0)\n                .onPerform(signal -> signal.connect(event -> container.requestPaint()))\n                .start();\n    }\n\n    @Override\n    public void onPause(Container container) {\n        timer.stop();\n    }\n\n    @Override\n    public void onResume(Container container) {\n        timer.start();\n    }\n\n    @Override\n    public void onDispose(Container container) {\n        insets = null;\n\n        Runtime.getInstance().exit(0);\n    }\n\n    @Override\n    public void onStart(Container container) {\n        container.setClientMinimumSize(MINIMUM_WIDTH, MINIMUM_HEIGHT);\n    }\n\n    @Override\n    public void onResize(Container container, int width, int height) {\n        container.getInsets(insets);\n        context.setPosition(insets.getLeft(), insets.getTop());\n        context.setSize(\n                container.getWidth() - insets.getLeft() - insets.getRight(),\n                container.getHeight() - insets.getTop() - insets.getBottom());\n    }\n\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"launch-the-application",children:"Launch the application"}),"\n",(0,i.jsxs)(n.p,{children:["Create a new file ",(0,i.jsx)(n.code,{children:"Main.java"})," in ",(0,i.jsx)(n.code,{children:"src/main/java/org/example/helloworld/desktop"})," under your project root directory, with the following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.example.helloworld.desktop;\n\nimport org.example.helloworld.HelloWorldContainer;\nimport unrefined.runtime.DesktopContainer;\nimport unrefined.runtime.DesktopRuntime;\n\nimport java.awt.Frame;\n\n/**\n * This is the main entry point of the application.\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        DesktopRuntime.initialize(args);\n\n        DesktopContainer container = new DesktopContainer(new HelloWorldContainer());\n\n        Frame frame = container.getFrame();\n        frame.setTitle("Unrefined Application");\n\n        container.requestLaunch(() -> frame.setLocationRelativeTo(null));\n    }\n\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:'Finally, run this file. You should get a "Unrefined Application" window with white background, and black text "Hello World" on its center.'})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);